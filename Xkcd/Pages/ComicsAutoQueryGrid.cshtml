@page "/comics-auto"
@attribute [RenderStatic]
@{
    ViewData["Title"] = "AutoQueryGrid View - Xkcd Comics";
}

<div class="p-8">
    <h2 class="flex justify-center items-center my-8 text-center font-display text-5xl font-bold tracking-tight text-slate-800 dark:text-slate-200">
        <a href="https://docs.servicestack.net/vue/gallery/autoquerygrid" target="_blank" title="AutoQueryGrid Vue Component">
            <svg class="inline-block mr-2 h-10 w-10 hover:text-indigo-600" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256"><path fill="currentColor" d="M108 84a16 16 0 1 1 16 16a16 16 0 0 1-16-16Zm128 44A108 108 0 1 1 128 20a108.12 108.12 0 0 1 108 108Zm-24 0a84 84 0 1 0-84 84a84.09 84.09 0 0 0 84-84Zm-72 36.68V132a20 20 0 0 0-20-20a12 12 0 0 0-4 23.32V168a20 20 0 0 0 20 20a12 12 0 0 0 4-23.32Z"/></svg></a>
        AutoQueryGrid xkcd
    </h2>
    <div id="app">
        <auto-query-grid type="XkcdComic"
                 selected-columns="imageUrl,width,height,id,title,transcript,explanation,url"
                 :visible-from="{ title:'sm', transcript:'xl', explanation:'2xl', url:'never' }"
                 :header-titles="{ imageUrl:'Comic', transcript:'Description' }"
                 v-on:row-selected="rowSelected"
                 class="mx-auto">
            <template #imageUrl="{ id, imageUrl }">
                <img :src="imageUrl" class="h-12 object-cover">
            </template>
            <template #transcript="{ transcript }">
                <p class="block max-w-sm text-ellipsis overflow-hidden" :title="transcript">{{ transcript }}</p>
            </template>
            <template #explanation="{ explanation }">
                <p class="block max-w-sm text-ellipsis overflow-hidden">{{ explanation }}</p>
            </template>
        </auto-query-grid>
        <modal-comic v-if="selected" :comic="selected" v-on:done="selected=null"></modal-comic>
    </div>
</div>
    
<script type="module">
import { ref } from "vue"
import { mount } from "app.mjs"

const App = {
    setup(props) {
        const selected = ref()
        function rowSelected(comic,e) {
            selected.value = comic
        }
        return { selected, rowSelected }
    },
}
mount('#app', App)
</script>
